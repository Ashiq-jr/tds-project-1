[
    {
        "name": "run_datagen",
        "description": "Run datagen.py script with user email as argument",
        "parameters": {
            "type": "object",
            "properties": {
                "script_path":{
                    "type": "string",
                    "description": "Full Path to the script file"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                }
            },
            "required": ["script_path", "email"]
        }
    },
    {
        "name": "format_markdown",
        "description": "Format markdown file using prettier",
        "parameters": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "Path to the markdown file to format"
                },
                "library":{
                    "type": "string",
                    "description": "The library used for formatting",
                    "default": "prettier"
                },
                "version":{
                    "type": "string",
                    "description": "Version of the library used for formatting",
                    "default": "3.4.2"
                }
            },
            "required": ["file_path", "library", "version"]
        }
    },
    {
        "name": "count_specific_day",
        "description": "Count occurrences of a specific day in a list of dates",
        "parameters": {
            "type": "object",
            "properties": {
                "input_file_path": {
                    "type": "string",
                    "description": "Path to input dates file"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output count file"
                },
                "day_to_count": {
                    "type": "string",
                    "description": "Name of the day to count (e.g., 'monday', 'tuesday', etc.). If not specified or invalid, returns empty string",
                    "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", ""]
                }
            },
            "required": ["input_file_path", "output_file_path", "day_to_count"]
        }
    },
    {
        "name": "sort_contacts",
        "description": "Sort contacts by last_name and first_name",
        "parameters": {
            "type": "object",
            "properties": {
                "input_file_path": {
                    "type": "string",
                    "description": "Path to input contacts JSON."
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output sorted JSON. If not specified or invalid or without extension, returns empty string"
                }
            },
            "required": ["input_file_path", "output_file_path"]
        }
    },
    {
        "name": "get_recent_logs",
        "description": "Get first lines of 10 most recent log files",
        "parameters": {
            "type": "object",
            "properties": {
                "logs_directory": {
                    "type": "string",
                    "description": "Directory containing log files."
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output file. If not specified or invalid or without extension, returns empty string"
                }
            },
            "required": ["logs_directory", "output_file_path"]
        }
    },
    {
        "name": "create_markdown_index",
        "description": "Create index of H1 headers from markdown files",
        "parameters": {
            "type": "object",
            "properties": {
                "docs_directory": {
                    "type": "string",
                    "description": "Directory containing markdown files"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output index JSON. If not specified or invalid or without extension, returns empty string"
                }
            },
            "required": ["docs_directory", "output_file_path"]
        }
    },
    {
        "name": "extract_email_sender",
        "description": "Extract sender's email address from email content",
        "parameters": {
            "type": "object",
            "properties": {
                "input_file_path": {
                    "type": "string",
                    "description": "Path to email content file"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output email address file. If not specified or invalid or without extension, returns empty string"
                }
            },
            "required": ["input_file_path", "output_file_path"]
        }
    },
    {
        "name": "extract_card_number",
        "description": "Extract credit card number from image",
        "parameters": {
            "type": "object",
            "properties": {
                "image_file_path": {
                    "type": "string",
                    "description": "Path to credit card image"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output card number file"
                }
            },
            "required": ["image_file_path", "output_file_path"]
        }
    },
    {
        "name": "find_similar_comments",
        "description": "Find most similar pair of comments using embeddings",
        "parameters": {
            "type": "object",
            "properties": {
                "input_file_path": {
                    "type": "string",
                    "description": "Path to comments file"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output similar comments file"
                }
            },
            "required": ["input_file_path", "output_file_path"]
        }
    },
    {
        "name": "calculate_gold_ticket_sales",
        "description": "Calculate total sales for Gold ticket type",
        "parameters": {
            "type": "object",
            "properties": {
                "db_file_path": {
                    "type": "string",
                    "description": "Path to SQLite database file"
                },
                "output_file_path": {
                    "type": "string",
                    "description": "Path to output sales total file. If not specified or invalid or without extension, returns empty string"
                }
            },
            "required": ["db_file_path", "output_file_path"]
        }
    }
]  
